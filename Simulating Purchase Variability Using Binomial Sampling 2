# Simulating Purchase Variability Using Binomial Sampling

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import codecademylib3  # Assuming this is an environment-specific library

# Initialize an empty list to store the number of purchases in each simulation
null_outcomes = []

# Run the simulation 10,000 times
for i in range(10000):
    # Simulate a week of 500 visitors, each with a 10% chance of making a purchase
    simulated_monthly_visitors = np.random.choice(['y', 'n'], size=500, p=[0.1, 0.9])
    # Calculate the number of purchases in this simulation
    num_purchased = np.sum(simulated_monthly_visitors == 'y')
    # Append the number of purchases to the list
    null_outcomes.append(num_purchased)

# Plot the histogram of null_outcomes
plt.hist(null_outcomes, bins=30, edgecolor='black')  # Use 30 bins for better distribution visualization

# Add a vertical line at 41 purchases
plt.axvline(41, color='r', linestyle='dashed', linewidth=2)

# Label the axes and title
plt.xlabel('Number of Purchases')
plt.ylabel('Frequency')
plt.title('Histogram of Simulated Purchases')

# Show the plot
plt.show()
