import { fetchRecipes } from '../../app/api'
import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';

// Replace loadRecipes with a createAsyncThunk action creator
const loadRecipes = createAsyncThunk(
  'allRecipes/loadRecipes',
  async () => {
    const data = await fetchRecipes();  // fetch data
    const json = await data.json();     // transform to JSON
    return json;                        // return data as JSON
  }
);

export const allRecipesSlice = createSlice({
  name: 'allRecipes',
  initialState: {
    recipes: [],
    // ... other initial state properties if any
  },
  reducers: {
    // ... your sync reducers here if any
  },
  extraReducers: (builder) => {
    builder
      .addCase(loadRecipes.pending, (state) => {
        // Optionally handle loading state
      })
      .addCase(loadRecipes.fulfilled, (state, action) => {
        state.recipes = action.payload; // save loaded recipes
      })
      .addCase(loadRecipes.rejected, (state) => {
        // Optionally handle error state
      });
  }
});

export { loadRecipes };
